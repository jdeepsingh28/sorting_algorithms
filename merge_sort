	public void merge_sort(int[] array) {
		int n = array.length;
		if (n < 2) {
			return;
		}
		int mid = n/2;
		int[] left = new int[mid];
		int[] right = new int[n-mid];
		
		for (int i=0; i < mid; i++) {
			left[i] = array[i];
		}
		for (int i=mid; i < n; i++) {
			right[i - mid] = array[i];
		}
		
		merge_sort(left);
		merge_sort(right);
		
		merge(left, right, array);
	}
	
	public static void merge(int[] left, int[] right, int[] array) {
		int i=0, j=0, k=0;
		int nL = left.length;
		int nR = right.length;
		while (i < nL && j < nR) {
			if (left[i] <= right[j]) {
				array[k++] = left[i++];
			}
			else {
				array[k++] = right[j++];
			}
		}
		while (i < nL) {
			array[k++] = left[i++];
		}
		while (j < nR) {
			array[k++] = right[j++];
		}
	}
